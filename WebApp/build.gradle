import org.gradle.api.plugins.JavaPluginConvention
import org.gradle.api.plugins.internal.DefaultJavaPluginConvention

plugins {
    id 'java'
    id 'com.github.kt3k.coveralls' version '2.8.4'
}

wrapper {
    description "Regenerates the Gradle Wrapper files"
    gradleVersion = '6.0.1'
    distributionUrl = "http://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}
group 'ru.osipov.deploy'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.12

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}
task cleanFull { subprojects.each { dependsOn("${it.name}:clean") }  }
task testAll(type: GradleBuild){
    def t1 = subprojects.find { p -> p.name == "frontend"}.getTasks().getByPath(":test")
    def t2 = subprojects.find { p -> p.name == "ApiGatewayApp"}.getTasks().getByPath(":test")
    tasks = [':frontend:test', 'ApiGatewayApp:test']
}
task coverTests {
    dependsOn ':ApiGatewayApp:coveralls'
}